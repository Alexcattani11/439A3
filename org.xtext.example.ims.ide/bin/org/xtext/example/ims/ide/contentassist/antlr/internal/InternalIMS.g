/*
 * generated by Xtext 2.34.0
 */
grammar InternalIMS;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.ims.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.ims.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.ims.services.IMSGrammarAccess;

}
@parser::members {
	private IMSGrammarAccess grammarAccess;

	public void setGrammarAccess(IMSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleIMS
entryRuleIMS
:
{ before(grammarAccess.getIMSRule()); }
	 ruleIMS
{ after(grammarAccess.getIMSRule()); } 
	 EOF 
;

// Rule IMS
ruleIMS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIMSAccess().getGroup()); }
		(rule__IMS__Group__0)
		{ after(grammarAccess.getIMSAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIrrigationRule
entryRuleIrrigationRule
:
{ before(grammarAccess.getIrrigationRuleRule()); }
	 ruleIrrigationRule
{ after(grammarAccess.getIrrigationRuleRule()); } 
	 EOF 
;

// Rule IrrigationRule
ruleIrrigationRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIrrigationRuleAccess().getGroup()); }
		(rule__IrrigationRule__Group__0)
		{ after(grammarAccess.getIrrigationRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSection
entryRuleSection
:
{ before(grammarAccess.getSectionRule()); }
	 ruleSection
{ after(grammarAccess.getSectionRule()); } 
	 EOF 
;

// Rule Section
ruleSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionAccess().getGroup()); }
		(rule__Section__Group__0)
		{ after(grammarAccess.getSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePump
entryRulePump
:
{ before(grammarAccess.getPumpRule()); }
	 rulePump
{ after(grammarAccess.getPumpRule()); } 
	 EOF 
;

// Rule Pump
rulePump 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPumpAccess().getGroup()); }
		(rule__Pump__Group__0)
		{ after(grammarAccess.getPumpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getGroup()); }
		(rule__AtomicExpression__Group__0)
		{ after(grammarAccess.getAtomicExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompoundExpression
entryRuleCompoundExpression
:
{ before(grammarAccess.getCompoundExpressionRule()); }
	 ruleCompoundExpression
{ after(grammarAccess.getCompoundExpressionRule()); } 
	 EOF 
;

// Rule CompoundExpression
ruleCompoundExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompoundExpressionAccess().getGroup()); }
		(rule__CompoundExpression__Group__0)
		{ after(grammarAccess.getCompoundExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberedElementFQN
entryRuleNumberedElementFQN
:
{ before(grammarAccess.getNumberedElementFQNRule()); }
	 ruleNumberedElementFQN
{ after(grammarAccess.getNumberedElementFQNRule()); } 
	 EOF 
;

// Rule NumberedElementFQN
ruleNumberedElementFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberedElementFQNAccess().getGroup()); }
		(rule__NumberedElementFQN__Group__0)
		{ after(grammarAccess.getNumberedElementFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule WaterSetting
ruleWaterSetting
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaterSettingAccess().getAlternatives()); }
		(rule__WaterSetting__Alternatives)
		{ after(grammarAccess.getWaterSettingAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Operator
ruleOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAtomicExpressionParserRuleCall_0()); }
		ruleAtomicExpression
		{ after(grammarAccess.getExpressionAccess().getAtomicExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getCompoundExpressionParserRuleCall_1()); }
		ruleCompoundExpression
		{ after(grammarAccess.getExpressionAccess().getCompoundExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaterSetting__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaterSettingAccess().getLOWEnumLiteralDeclaration_0()); }
		('LOW')
		{ after(grammarAccess.getWaterSettingAccess().getLOWEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getWaterSettingAccess().getMEDIUMEnumLiteralDeclaration_1()); }
		('MEDIUM')
		{ after(grammarAccess.getWaterSettingAccess().getMEDIUMEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getWaterSettingAccess().getHIGHEnumLiteralDeclaration_2()); }
		('HIGH')
		{ after(grammarAccess.getWaterSettingAccess().getHIGHEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getANDEnumLiteralDeclaration_0()); }
		('AND')
		{ after(grammarAccess.getOperatorAccess().getANDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getOREnumLiteralDeclaration_1()); }
		('OR')
		{ after(grammarAccess.getOperatorAccess().getOREnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMS__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IMS__Group__0__Impl
	rule__IMS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IMS__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIMSAccess().getFieldsAssignment_0()); }
	(rule__IMS__FieldsAssignment_0)*
	{ after(grammarAccess.getIMSAccess().getFieldsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMS__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IMS__Group__1__Impl
	rule__IMS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IMS__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIMSAccess().getIrrigationRulesAssignment_1()); }
	(rule__IMS__IrrigationRulesAssignment_1)*
	{ after(grammarAccess.getIMSAccess().getIrrigationRulesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMS__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IMS__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IMS__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIMSAccess().getExpressionsAssignment_2()); }
	(rule__IMS__ExpressionsAssignment_2)*
	{ after(grammarAccess.getIMSAccess().getExpressionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IrrigationRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__0__Impl
	rule__IrrigationRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getIfKeyword_0()); }
	'If'
	{ after(grammarAccess.getIrrigationRuleAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__1__Impl
	rule__IrrigationRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getExpressionAssignment_1()); }
	(rule__IrrigationRule__ExpressionAssignment_1)
	{ after(grammarAccess.getIrrigationRuleAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__2__Impl
	rule__IrrigationRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIrrigationRuleAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__3__Impl
	rule__IrrigationRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getSettingAssignment_3()); }
	(rule__IrrigationRule__SettingAssignment_3)
	{ after(grammarAccess.getIrrigationRuleAccess().getSettingAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__4__Impl
	rule__IrrigationRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getForKeyword_4()); }
	'for'
	{ after(grammarAccess.getIrrigationRuleAccess().getForKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__5__Impl
	rule__IrrigationRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getIrrigationRuleAccess().getGroup_5()); }
		(rule__IrrigationRule__Group_5__0)
		{ after(grammarAccess.getIrrigationRuleAccess().getGroup_5()); }
	)
	(
		{ before(grammarAccess.getIrrigationRuleAccess().getGroup_5()); }
		(rule__IrrigationRule__Group_5__0)*
		{ after(grammarAccess.getIrrigationRuleAccess().getGroup_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__6__Impl
	rule__IrrigationRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getForKeyword_6()); }
	'for'
	{ after(grammarAccess.getIrrigationRuleAccess().getForKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__7__Impl
	rule__IrrigationRule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getDurationAssignment_7()); }
	(rule__IrrigationRule__DurationAssignment_7)
	{ after(grammarAccess.getIrrigationRuleAccess().getDurationAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getHourSKeyword_8()); }
	'hour(s)'
	{ after(grammarAccess.getIrrigationRuleAccess().getHourSKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IrrigationRule__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group_5__0__Impl
	rule__IrrigationRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getPumpsAssignment_5_0()); }
	(rule__IrrigationRule__PumpsAssignment_5_0)
	{ after(grammarAccess.getIrrigationRuleAccess().getPumpsAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getGroup_5_1()); }
	(rule__IrrigationRule__Group_5_1__0)*
	{ after(grammarAccess.getIrrigationRuleAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IrrigationRule__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group_5_1__0__Impl
	rule__IrrigationRule__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getCommaKeyword_5_1_0()); }
	','
	{ after(grammarAccess.getIrrigationRuleAccess().getCommaKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IrrigationRule__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIrrigationRuleAccess().getPumpsAssignment_5_1_1()); }
	(rule__IrrigationRule__PumpsAssignment_5_1_1)
	{ after(grammarAccess.getIrrigationRuleAccess().getPumpsAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getFieldKeyword_0()); }
	'Field'
	{ after(grammarAccess.getFieldAccess().getFieldKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
	(rule__Field__NameAssignment_1)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSectionsAssignment_3()); }
	(rule__Field__SectionsAssignment_3)*
	{ after(grammarAccess.getFieldAccess().getSectionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__0__Impl
	rule__Section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
	'section'
	{ after(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__1__Impl
	rule__Section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getNameAssignment_1()); }
	(rule__Section__NameAssignment_1)
	{ after(grammarAccess.getSectionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__2__Impl
	rule__Section__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__3__Impl
	rule__Section__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSectionAccess().getPumpsAssignment_3()); }
		(rule__Section__PumpsAssignment_3)
		{ after(grammarAccess.getSectionAccess().getPumpsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getSectionAccess().getPumpsAssignment_3()); }
		(rule__Section__PumpsAssignment_3)*
		{ after(grammarAccess.getSectionAccess().getPumpsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pump__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pump__Group__0__Impl
	rule__Pump__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pump__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPumpAccess().getPumpKeyword_0()); }
	'pump'
	{ after(grammarAccess.getPumpAccess().getPumpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pump__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pump__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pump__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPumpAccess().getNameAssignment_1()); }
	(rule__Pump__NameAssignment_1)
	{ after(grammarAccess.getPumpAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__0__Impl
	rule__AtomicExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__1__Impl
	rule__AtomicExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getForecastKeyword_1()); }
	'forecast'
	{ after(grammarAccess.getAtomicExpressionAccess().getForecastKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__2__Impl
	rule__AtomicExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getAtomicExpressionAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__3__Impl
	rule__AtomicExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getForecastLowerBoundAssignment_3()); }
	(rule__AtomicExpression__ForecastLowerBoundAssignment_3)
	{ after(grammarAccess.getAtomicExpressionAccess().getForecastLowerBoundAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__4__Impl
	rule__AtomicExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getToKeyword_4()); }
	'to'
	{ after(grammarAccess.getAtomicExpressionAccess().getToKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__5__Impl
	rule__AtomicExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getForecastUpperBoundAssignment_5()); }
	(rule__AtomicExpression__ForecastUpperBoundAssignment_5)
	{ after(grammarAccess.getAtomicExpressionAccess().getForecastUpperBoundAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__6__Impl
	rule__AtomicExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getPercentSignKeyword_6()); }
	'%'
	{ after(grammarAccess.getAtomicExpressionAccess().getPercentSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__7__Impl
	rule__AtomicExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getAtomicExpressionAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__8__Impl
	rule__AtomicExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getFieldAssignment_8()); }
	(rule__AtomicExpression__FieldAssignment_8)
	{ after(grammarAccess.getAtomicExpressionAccess().getFieldAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__9__Impl
	rule__AtomicExpression__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getMoistureKeyword_9()); }
	'.moisture'
	{ after(grammarAccess.getAtomicExpressionAccess().getMoistureKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__10__Impl
	rule__AtomicExpression__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getEqualsSignKeyword_10()); }
	'='
	{ after(grammarAccess.getAtomicExpressionAccess().getEqualsSignKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__11__Impl
	rule__AtomicExpression__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getMoistureLowerBoundAssignment_11()); }
	(rule__AtomicExpression__MoistureLowerBoundAssignment_11)
	{ after(grammarAccess.getAtomicExpressionAccess().getMoistureLowerBoundAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__12__Impl
	rule__AtomicExpression__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getToKeyword_12()); }
	'to'
	{ after(grammarAccess.getAtomicExpressionAccess().getToKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__13__Impl
	rule__AtomicExpression__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getMoistureUpperBoundAssignment_13()); }
	(rule__AtomicExpression__MoistureUpperBoundAssignment_13)
	{ after(grammarAccess.getAtomicExpressionAccess().getMoistureUpperBoundAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpression__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_14()); }
	')'
	{ after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExpression__Group__0__Impl
	rule__CompoundExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getCompoundExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExpression__Group__1__Impl
	rule__CompoundExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpressionAccess().getLHSAssignment_1()); }
	(rule__CompoundExpression__LHSAssignment_1)
	{ after(grammarAccess.getCompoundExpressionAccess().getLHSAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExpression__Group__2__Impl
	rule__CompoundExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpressionAccess().getOperatorAssignment_2()); }
	(rule__CompoundExpression__OperatorAssignment_2)
	{ after(grammarAccess.getCompoundExpressionAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExpression__Group__3__Impl
	rule__CompoundExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpressionAccess().getRHSAssignment_3()); }
	(rule__CompoundExpression__RHSAssignment_3)
	{ after(grammarAccess.getCompoundExpressionAccess().getRHSAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCompoundExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberedElementFQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberedElementFQN__Group__0__Impl
	rule__NumberedElementFQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedElementFQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberedElementFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getNumberedElementFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedElementFQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberedElementFQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedElementFQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberedElementFQNAccess().getGroup_1()); }
	(rule__NumberedElementFQN__Group_1__0)*
	{ after(grammarAccess.getNumberedElementFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberedElementFQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberedElementFQN__Group_1__0__Impl
	rule__NumberedElementFQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedElementFQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberedElementFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getNumberedElementFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedElementFQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberedElementFQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedElementFQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberedElementFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getNumberedElementFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IMS__FieldsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIMSAccess().getFieldsFieldParserRuleCall_0_0()); }
		ruleField
		{ after(grammarAccess.getIMSAccess().getFieldsFieldParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMS__IrrigationRulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIMSAccess().getIrrigationRulesIrrigationRuleParserRuleCall_1_0()); }
		ruleIrrigationRule
		{ after(grammarAccess.getIMSAccess().getIrrigationRulesIrrigationRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IMS__ExpressionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIMSAccess().getExpressionsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIMSAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIrrigationRuleAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIrrigationRuleAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__SettingAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIrrigationRuleAccess().getSettingWaterSettingEnumRuleCall_3_0()); }
		ruleWaterSetting
		{ after(grammarAccess.getIrrigationRuleAccess().getSettingWaterSettingEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__PumpsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIrrigationRuleAccess().getPumpsPumpCrossReference_5_0_0()); }
		(
			{ before(grammarAccess.getIrrigationRuleAccess().getPumpsPumpNumberedElementFQNParserRuleCall_5_0_0_1()); }
			ruleNumberedElementFQN
			{ after(grammarAccess.getIrrigationRuleAccess().getPumpsPumpNumberedElementFQNParserRuleCall_5_0_0_1()); }
		)
		{ after(grammarAccess.getIrrigationRuleAccess().getPumpsPumpCrossReference_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__PumpsAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIrrigationRuleAccess().getPumpsPumpCrossReference_5_1_1_0()); }
		(
			{ before(grammarAccess.getIrrigationRuleAccess().getPumpsPumpNumberedElementFQNParserRuleCall_5_1_1_0_1()); }
			ruleNumberedElementFQN
			{ after(grammarAccess.getIrrigationRuleAccess().getPumpsPumpNumberedElementFQNParserRuleCall_5_1_1_0_1()); }
		)
		{ after(grammarAccess.getIrrigationRuleAccess().getPumpsPumpCrossReference_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IrrigationRule__DurationAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIrrigationRuleAccess().getDurationINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getIrrigationRuleAccess().getDurationINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__SectionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getSectionsSectionParserRuleCall_3_0()); }
		ruleSection
		{ after(grammarAccess.getFieldAccess().getSectionsSectionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__PumpsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getPumpsPumpParserRuleCall_3_0()); }
		rulePump
		{ after(grammarAccess.getSectionAccess().getPumpsPumpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pump__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPumpAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPumpAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ForecastLowerBoundAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getForecastLowerBoundINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicExpressionAccess().getForecastLowerBoundINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ForecastUpperBoundAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getForecastUpperBoundINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicExpressionAccess().getForecastUpperBoundINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__FieldAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getFieldFieldCrossReference_8_0()); }
		(
			{ before(grammarAccess.getAtomicExpressionAccess().getFieldFieldIDTerminalRuleCall_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicExpressionAccess().getFieldFieldIDTerminalRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getAtomicExpressionAccess().getFieldFieldCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__MoistureLowerBoundAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getMoistureLowerBoundINTTerminalRuleCall_11_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicExpressionAccess().getMoistureLowerBoundINTTerminalRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__MoistureUpperBoundAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExpressionAccess().getMoistureUpperBoundINTTerminalRuleCall_13_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicExpressionAccess().getMoistureUpperBoundINTTerminalRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__LHSAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundExpressionAccess().getLHSExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCompoundExpressionAccess().getLHSExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundExpressionAccess().getOperatorOperatorEnumRuleCall_2_0()); }
		ruleOperator
		{ after(grammarAccess.getCompoundExpressionAccess().getOperatorOperatorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExpression__RHSAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundExpressionAccess().getRHSExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getCompoundExpressionAccess().getRHSExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
